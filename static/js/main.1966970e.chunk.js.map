{"version":3,"sources":["pages/SearchPage/SearchPage.jsx","lib/api/apiBase.js","lib/api/getMovies.js","context/movieContext.js","components/MovieTile/MovieTile.jsx","components/BackButton/BackButton.jsx","components/PageHeader/PageHeader.js","pages/MovieList/MovieList.jsx","pages/Movie/Movie.jsx","pages/NotFound/NotFound.jsx","mock.js","App.js","serviceWorker.js","index.js"],"names":["SearchPage","history","useHistory","useState","keyword","setKeyword","year","setYear","error","setError","submition","e","preventDefault","length","url","push","className","onSubmit","form","name","data-testid","type","placeholder","required","value","onChange","target","toLowerCase","onClick","role","http","axios","create","baseURL","interceptors","request","use","config","params","apikey","getMovies","movieTitle","get","s","y","getMovie","movieId","i","MovieContext","React","createContext","movies","details","updateDetails","updateMovies","MovieProvider","Provider","MovieTile","imdbID","Title","Poster","Year","src","alt","BackButton","sameDomain","setSameDomain","useEffect","refererHost","document","referrer","URL","hostname","currentHost","window","location","goBack","PageHeader","title","customClassName","MovieList","useContext","useParams","results","setResults","titleKey","checkIfExist","useCallback","a","data","searchResult","Search","filter","el","Type","newMovie","map","key","Movie","movieDescription","setMovieDescription","movieError","setMovieError","fetchDetails","Error","newDetails","Director","Actors","Awards","Country","Genre","imdbRating","Runtime","Plot","NotFound","MOVIES","terminator","App","setMovies","setDetails","exact","path","Boolean","match","ReactDOM","render","StrictMode","basename","process","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1966970e.chunk.js","sourcesContent":["import React, {useState}  from \"react\";\nimport {useHistory} from \"react-router\";\nimport './SearchPage.scss';\n\nconst SearchPage = () => {\n    const history = useHistory();\n    const [keyword, setKeyword] = useState('');\n    const [year, setYear] = useState('');\n    const [error, setError] = useState(null)\n    const updateSearch = (e) => {\n        setKeyword(e.target.value.toLowerCase());\n    }\n    const updateYear = (e) => {\n        setYear(e.target.value.toLowerCase());\n    }\n    const submition =  (e) => {\n        e.preventDefault();\n        if(keyword.length){\n            let url = `/movie-list/${keyword}`\n            if(year.length) url += `/${year}`;\n            history.push(url);\n            setError(null);\n        } else {\n            setError('Movie Title Field is required')\n        }\n\n    }\n    return<section className=\"container dark-background search-page h-50\">\n        <header className=\"search-page-header\">\n            <h1>Movie Search App</h1>\n        </header>\n        <main className=\"search-page-content\">\n            <form className=\"form-inline\" onSubmit={submition}>\n                <div className=\"form-group mx-sm-3 mb-2\">\n                    <label form=\"movieTitle\" className=\"sr-only\">Movie title</label>\n                    <input  className=\"form-control\" name=\"movieTitle\" data-testid=\"movieTitle\" type=\"text\" placeholder='Movie Title' required={true} value={keyword} onChange={updateSearch}/>\n                </div>\n                <div className=\"form-group mx-sm-3 mb-2\">\n                    <label form=\"year\" className=\"sr-only\">Production Year</label>\n                    <input  className=\"form-control\" placeholder='Production Year' data-testid=\"year\" name=\"year\" type=\"text\" value={year} onChange={updateYear}/>\n                </div>\n                <button className=\"btn btn-primary mb-2\" data-testid=\"search-button\" onClick={submition}> Search</button>\n            </form>\n            {error &&  <div  data-testid=\"validation-error\" className=\"alert alert-danger\" role=\"alert\">\n                {error}\n            </div> }\n\n        </main>\n    </section>\n\n\n\n}\n\n\nexport default SearchPage;","import axios from 'axios';\n\nconst baseURL = 'http://www.omdbapi.com/';\nconst apiKey = '157f34ed';\n\nconst http = axios.create({\n    baseURL,\n})\n\nhttp.interceptors.request.use(config => {\n    config.params = {\n        apikey: apiKey,\n        type: ['movie', 'series', 'episode'],\n        ...config.params,\n    };\n    return config;\n});\n\n\nexport {http}","import {http} from './apiBase';\n\nconst getMovies = (movieTitle, year = '') => http.get('', { params: {\n    s: movieTitle,\n    y: year\n    }});\n\nconst getMovie = (movieId) => http.get('', { params: {\n        i: movieId,\n    }});\n\n\nexport {getMovie, getMovies}","import React from \"react\";\n\nconst MovieContext = React.createContext({\n    movies: {},\n    details: {},\n    updateDetails: () => {},\n    updateMovies: () => {}\n});\n\nexport const MovieProvider = MovieContext.Provider;\n\nexport default MovieContext;","import React from \"react\";\nimport {useHistory} from \"react-router\";\nimport \"./MovieTile.scss\";\n\n\nconst MovieTile = ({imdbID, Title, Poster, Year }) => {\n    const history = useHistory();\n    const showDetails = () => {\n      history.push(`/movie/${imdbID}`);\n    }\n    return <div  className=\"movie-tile dark-background\" >\n            <img className=\"movie-tile-poster\" src={Poster}\n                 alt={Title} />\n        <section className=\"movie-tile-description\">\n            <h3>{Title} / {Year}</h3>\n            <button className='btn btn-primary' data-testid=\"read-more\" onClick={showDetails}>Read More</button>\n        </section>\n\n\n    </div>\n}\n\nexport default MovieTile;","import React, {useState, useEffect} from \"react\";\nimport {useHistory} from \"react-router\";\n\n\nconst BackButton = () => {\n    const history = useHistory();\n    const [sameDomain, setSameDomain] = useState(true)\n\n    const goBack = () => {\n        sameDomain ? history.goBack() : history.push('/');\n    }\n\n    useEffect(() => {\n        const refererHost = document.referrer.length ? new URL(document.referrer).hostname: ''\n        const currentHost = window.location.hostname;\n        if( refererHost.length && refererHost !== currentHost) setSameDomain(false);\n    }, [])\n    return <button type=\"button\" className=\"btn btn-primary\" onClick={goBack}>\n        Back\n    </button>\n}\n\nexport default BackButton;","import React from \"react\";\nimport BackButton from \"../BackButton/BackButton\";\n\nimport './PageHeadr.scss';\nconst PageHeader = ({title, customClassName}) => {\n    return <header className={`page-header ${customClassName}`}>\n        <BackButton/>\n        <h1>{title}</h1>\n    </header>\n}\n\nexport default PageHeader;","import React, {useCallback, useContext, useEffect, useState} from 'react';\nimport {getMovies} from \"../../lib/api/getMovies\";\nimport {useHistory} from \"react-router\";\nimport MovieContext from \"../../context/movieContext\";\nimport {useParams} from \"react-router\";\nimport MovieTile from \"../../components/MovieTile/MovieTile\";\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\n\nimport './MovieList.scss';\n\n\nconst MovieList = () => {\n    const {movies, updateMovies} = useContext(MovieContext);\n    const history = useHistory();\n    const {title, year} = useParams();\n    const [results, setResults] = useState([]);\n    let titleKey = year ? `${title}/${year}` : title;\n\n    const checkIfExist = useCallback(async (title, titleKey, year) => {\n        if (movies[titleKey]){\n            setResults(movies[titleKey])\n        } else {\n            try {\n                const {data} = await getMovies(title, year);\n                const searchResult = data.Search.filter(el => el.Type !== 'game');\n                setResults(searchResult)\n                const newMovie = {...movies};\n                newMovie[titleKey] = searchResult;\n                updateMovies(newMovie)\n            } catch(err){\n                history.push('/notFound')\n            }\n        }\n    }, [updateMovies, movies, history])\n\n    useEffect(() => { checkIfExist(title, titleKey, year) }, [title, titleKey, year, checkIfExist])\n\n    return <section className='container list-page'>\n        <PageHeader customClassName={\"dark-background\"} title={`You serched ${title}`}/>\n        <main className='list-page-results'>\n            { results && results.map(el =>  <MovieTile key={el.imdbID} {...el}/>)}\n        </main>\n\n    </section>\n}\n\n\n\n\nexport default MovieList;","import React, {useContext, useEffect, useState, useCallback} from 'react';\nimport MovieContext from \"../../context/movieContext\";\nimport {getMovie} from \"../../lib/api/getMovies\";\nimport {useParams} from \"react-router\";\nimport {useHistory} from \"react-router\";\n\nimport './Movie.scss';\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\n\nconst Movie = () => {\n    const history = useHistory();\n    const {details, updateDetails} = useContext(MovieContext);\n    const {movieId} = useParams();\n    const [movieDescription, setMovieDescription] = useState({});\n    const [movieError, setMovieError] = useState(null);\n    const fetchDetails = useCallback(async () => {\n        try {\n            const {data} = await getMovie(movieId);\n            if(data.Error){\n                setMovieError('we are unable to find more information')\n            } else {\n                const newDetails = {...details};\n                newDetails[movieId] = data;\n                updateDetails(newDetails);\n                setMovieDescription(data);\n            }\n\n        } catch (err) {\n            history.push('/notFound');\n        }\n\n    }, [movieId, details, updateDetails, history]);\n\n\n    useEffect(() => {\n        if(details[movieId]){\n            setMovieDescription(details[movieId]);\n        } else {\n            fetchDetails();\n        }\n    }, [fetchDetails, movieId, details])\n\n    return <article className=\"container movie-page\">\n        <PageHeader customClassName={\"movie-page-header dark-background\"} title={!movieError ?movieDescription.Title : movieError}/>\n        {!movieError && <section className=\"movie-page-content dark-background \">\n            <img className=\"movie-page-poster\" src={movieDescription.Poster} alt={movieDescription.Title}/>\n            <main className=\"movie-page-description\">\n                <dl className=\"movie-page-info\">\n                    <dt>Director: </dt>\n                    <dd>{movieDescription.Director}</dd>\n                    <dt>Actors: </dt>\n                    <dd>{movieDescription.Actors}</dd>\n                    <dt>Awards: </dt>\n                    <dd>{movieDescription.Awards}</dd>\n                    <dt>Country: </dt>\n                    <dd>{movieDescription.Country}</dd>\n                    <dt>Genre: </dt>\n                    <dd>{movieDescription.Genre}</dd>\n                    <dt>Rating imdb: </dt>\n                    <dd>{movieDescription.imdbRating}</dd>\n                    <dt>Runtime: </dt>\n                    <dd>{movieDescription.Runtime}</dd>\n                </dl>\n                <p>\n                    {movieDescription.Plot}\n                </p>\n            </main>\n        </section> }\n    </article>\n}\n\nexport default Movie;\n","import React from \"react\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport './NotFound.scss'\n\nconst NotFound = () => {\n  return <section className=\"container not-found dark-background\">\n    <p className=\"not-found-info\">\n      Unfortunately we cannot find page which you are looking for.\n      Please use Back button to go to search page</p>\n    <BackButton/>\n  </section>\n}\n\nexport default NotFound;","export const MOVIES = { terminator:[\n    {\n      \"Title\": \"Terminator 2: Judgment Day\",\n      \"Year\": \"1991\",\n      \"imdbID\": \"tt0103064\",\n      \"Type\": \"movie\",\n      \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMGU2NzRmZjUtOGUxYS00ZjdjLWEwZWItY2NlM2JhNjkxNTFmXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\"\n    },\n    {\n      \"Title\": \"The Terminator\",\n      \"Year\": \"1984\",\n      \"imdbID\": \"tt0088247\",\n      \"Type\": \"movie\",\n      \"Poster\": \"https://m.media-amazon.com/images/M/MV5BYTViNzMxZjEtZGEwNy00MDNiLWIzNGQtZDY2MjQ1OWViZjFmXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg\"\n    },\n    {\n      \"Title\": \"Terminator 3: Rise of the Machines\",\n      \"Year\": \"2003\",\n      \"imdbID\": \"tt0181852\",\n      \"Type\": \"movie\",\n      \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMTk5NzM1ODgyN15BMl5BanBnXkFtZTcwMzA5MjAzMw@@._V1_SX300.jpg\"\n    },\n    {\n      \"Title\": \"Terminator Salvation\",\n      \"Year\": \"2009\",\n      \"imdbID\": \"tt0438488\",\n      \"Type\": \"movie\",\n      \"Poster\": \"https://m.media-amazon.com/images/M/MV5BODE1MTM1MzA2NF5BMl5BanBnXkFtZTcwODQ5MTA2Mg@@._V1_SX300.jpg\"\n    },\n    {\n      \"Title\": \"Terminator Genisys\",\n      \"Year\": \"2015\",\n      \"imdbID\": \"tt1340138\",\n      \"Type\": \"movie\",\n      \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMjM1NTc0NzE4OF5BMl5BanBnXkFtZTgwNDkyNjQ1NTE@._V1_SX300.jpg\"\n    },\n    {\n      \"Title\": \"Terminator: Dark Fate\",\n      \"Year\": \"2019\",\n      \"imdbID\": \"tt6450804\",\n      \"Type\": \"movie\",\n      \"Poster\": \"https://m.media-amazon.com/images/M/MV5BOWExYzVlZDgtY2E1ZS00NTFjLWFmZWItZjI2NWY5ZWJiNTE4XkEyXkFqcGdeQXVyMTA3MTA4Mzgw._V1_SX300.jpg\"\n    },\n    {\n      \"Title\": \"Terminator: The Sarah Connor Chronicles\",\n      \"Year\": \"2008–2009\",\n      \"imdbID\": \"tt0851851\",\n      \"Type\": \"series\",\n      \"Poster\": \"https://m.media-amazon.com/images/M/MV5BZGE2ZDgyOWUtNzdiNS00OTI3LTkwZGQtMTMwNzM4YWUxNGNhXkEyXkFqcGdeQXVyNjU2NjA5NjM@._V1_SX300.jpg\"\n    },\n    {\n      \"Title\": \"Lady Terminator\",\n      \"Year\": \"1989\",\n      \"imdbID\": \"tt0095483\",\n      \"Type\": \"movie\",\n      \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMTg5NTA1NzEtNWNiNy00ZTc4LWJhZTgtYmJkODZhYWI3NmQ4XkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\"\n    }\n  ]\n}\n\nexport const  DETAILS = {\n    \"tt0103064\": {\n        \"Title\":\"Terminator 2: Judgment Day\",\n    \"Year\":\"1991\",\n    \"Rated\":\"R\",\n    \"Released\":\"03 Jul 1991\",\n    \"Runtime\":\"137 min\",\n    \"Genre\":\"Action, Sci-Fi\",\n    \"Director\":\"James Cameron\",\n    \"Writer\":\"James Cameron, William Wisher\",\n    \"Actors\":\"Arnold Schwarzenegger, Linda Hamilton, Edward Furlong, Robert Patrick\",\n    \"Plot\":\"A cyborg, identical to the one who failed to kill Sarah Connor, must now protect her teenage son, John Connor, from a more advanced and powerful cyborg.\",\n    \"Language\":\"English, Spanish\",\n    \"Country\":\"USA\",\n    \"Awards\":\"Won 4 Oscars. Another 32 wins & 33 nominations.\",\n    \"Poster\":\"https://m.media-amazon.com/images/M/MV5BMGU2NzRmZjUtOGUxYS00ZjdjLWEwZWItY2NlM2JhNjkxNTFmXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\",\n    \"Ratings\":[\n        {\n            \"Source\":\"Internet Movie Database\",\n            \"Value\":\"8.5/10\"\n        },\n        {\n            \"Source\":\"Rotten Tomatoes\",\n            \"Value\":\"93%\"\n        },\n        {\n            \"Source\":\"Metacritic\",\n            \"Value\":\"75/100\"\n        }\n    ],\n    \"Metascore\":\"75\",\n    \"imdbRating\":\"8.5\",\n    \"imdbVotes\":\"958,677\",\n    \"imdbID\":\"tt0103064\",\n    \"Type\":\"movie\",\n    \"DVD\":\"31 Mar 1998\",\n    \"BoxOffice\":\"$198,116,802\",\n    \"Production\":\"TriStar Pictures\",\n    \"Website\":\"N/A\",\n    \"Response\":\"True\"\n}\n}\n\n\n\n\n","import React, {useState} from 'react';\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport './App.scss';\nimport SearchPage from \"./pages/SearchPage/SearchPage\";\nimport MovieList from \"./pages/MovieList/MovieList\";\nimport Movie from \"./pages/Movie/Movie\";\nimport NotFound from \"./pages/NotFound/NotFound\";\n\nimport {MovieProvider} from \"./context/movieContext\";\n\nimport {MOVIES} from \"./mock\";\n\nconst App = () => {\n    const [movies, setMovies] = useState(MOVIES);\n    const [details, setDetails] = useState({})\n    const updateMovies = (movies) => {\n        setMovies(movies);\n    }\n    const updateDetails = (details) => {\n        setDetails(details);\n    }\n\n  return <MovieProvider value={{\n      movies,\n      details,\n      updateMovies,\n      updateDetails\n  }}>\n      <Switch>\n          <Route exact={true} path=\"/movie-list/:title/:year?\"><MovieList/></Route>\n          <Route exact={true} path=\"/movie/:movieId\"><Movie/></Route>\n          <Route exact={true} path=\"/\"> <SearchPage/> </Route>\n          <Route exact={true} path=\"*\"> <NotFound/> </Route>\n      </Switch>\n  </MovieProvider>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router basename={process.env.PUBLIC_URL}>\n          <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}